
def outputDir="/home/kirk/3d/scad"

def partMap = [
	'rail_plugs':	['m1','m2','m3'],
	'Aqee_customizable_toy_train_tracks':	['x'],
	'ballon_tie':	['default'],
	'rider':	['servo_mount','stepdown_mount','board_mount'],
	'reception_booth':	['road','barrier_post','barrier_post2','booth','barrier'],
	'vl53l0x-servo':	['fullMount'],
	'petrol_station':	['road','pump','roadPart'],
	'mini_c270_mod':	['foot','middle','cameraHolder'],
	'fiesta_2003_vent_mount':	['ventPart'],
	'shower_booth_handle':	['handleA','handleB','handleT'],
	'esp-gen-1-b':		['top', 'bottom'],
	'calib':		['push_in','circles','islands'],
	'wheelNutDriver':	['def'],
	'drillHolder':		['def'],
	'puzzle_box_viktor':	['lid','base'],
		]

task allScad() {}

partMap.each { inputName,modes ->
	modes.each { mode ->
		println "${inputName} ; ${mode}"
		def outputName="${inputName}@${mode}"
		def oFile=new File(outputDir,"${outputName}.stl")
		def t=task("scad_${outputName}",type:Exec) {
			def inputFile=file("${inputName}.scad")
			inputs.file inputFile
			outputs.file oFile
			commandLine "openscad-nightly","-D","mode=\"$mode\"","-o",oFile,inputFile
//			doLast 
//				exec("asd")
			// oFile
//			}
		}
		allScad.dependsOn(t)
	}
}

